#!/usr/bin/env python
PACKAGE = "echtzeitsysteme"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("green_low_H", int_t, 0, "green: lower bound for H", 59, 0, 179)
gen.add("green_low_S", int_t, 0, "green: lower bound for S", 82, 0, 255)
gen.add("green_low_V", int_t, 0, "green: lower bound for V", 177, 0, 255)
gen.add("green_high_H", int_t, 0, "green: higher bound for H", 89, 0, 179)
gen.add("green_high_S", int_t, 0, "green: higher bound for S", 255, 0, 255)
gen.add("green_high_V", int_t, 0, "green: higher bound for V", 255, 0, 255)

gen.add("pink_low_H", int_t, 0, "pink: lower bound for H", 159, 0, 179)
gen.add("pink_low_S", int_t, 0, "pink: lower bound for S", 49, 0, 255)
gen.add("pink_low_V", int_t, 0, "pink: lower bound for V", 187, 0, 255)
gen.add("pink_high_H", int_t, 0, "pink: higher bound for H", 197, 0, 179)
gen.add("pink_high_S", int_t, 0, "pink: higher bound for S", 254, 0, 255)
gen.add("pink_high_V", int_t, 0, "pink: higher bound for V", 255, 0, 255)

gen.add("loop_rate", int_t, 0, "loop rate for image processing", 10, 1, 100)
gen.add("colorThreshold", int_t, 0, "intensity threshold to be recognized as lane", 175, 0, 255)


exit(gen.generate(PACKAGE, "Image Processing", "ImageProcessing"))